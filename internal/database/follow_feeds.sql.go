// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: follow_feeds.sql

package database

import (
	"context"
	"time"
)

const followFeed = `-- name: FollowFeed :one
INSERT INTO feeds_users (id,created_at,updated_at,user_id,feed_id)
VALUES ($1,$2,$3,$4,$5)
RETURNING id, created_at, updated_at, user_id, feed_id
`

type FollowFeedParams struct {
	ID        string
	CreatedAt time.Time
	UpdatedAt time.Time
	UserID    string
	FeedID    string
}

func (q *Queries) FollowFeed(ctx context.Context, arg FollowFeedParams) (FeedsUser, error) {
	row := q.db.QueryRowContext(ctx, followFeed,
		arg.ID,
		arg.CreatedAt,
		arg.UpdatedAt,
		arg.UserID,
		arg.FeedID,
	)
	var i FeedsUser
	err := row.Scan(
		&i.ID,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.UserID,
		&i.FeedID,
	)
	return i, err
}

const unfollow = `-- name: Unfollow :exec
DELETE FROM feeds_users
WHERE feeds_users.id = $1
`

func (q *Queries) Unfollow(ctx context.Context, id string) error {
	_, err := q.db.ExecContext(ctx, unfollow, id)
	return err
}
